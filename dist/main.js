(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),A=t(667),c=t.n(A),d=new URL(t(226),t.b),s=i()(o()),l=c()(d);s.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Montserrat', sans-serif;\n}\n\n:root {\n    --dark-blue: #2b3467;\n    --light-blue: #bad7e9;\n    --cream: #fcffe7;\n    --red: #eb455f;\n    --purple: #5d3891;\n    --orange: #f99417;\n    --gray: #e8e2e2;\n    --light-grey: #f5f5f5;\n    --green: #ade792;\n    --dark-green: #5d9c59;\n}\n\n.main-container {\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 100vh;\n}\n\n/* Sidebar */\n\n.sidebar {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding: 1rem;\n    color: var(--light-grey);\n    background-color: var(--dark-blue);\n}\n\n.sidebar-head {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.sidebar-user {\n    font-size: 0.7rem;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.edit-user {\n    opacity: 0.3;\n    padding-left: 0px;\n    cursor: pointer;\n}\n\n/* PopUp */\n.edit-popup {\n    position: relative;\n}\n\n.edit-form,\n.edit-current-project,\n.delete-current-project,\n.add-new-project {\n    visibility: hidden;\n    width: 160px;\n    background-color: var(--light-blue);\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding: 8px 0;\n    position: absolute;\n    z-index: 1;\n    bottom: 125%;\n    left: 50%;\n    margin-left: -80px;\n}\n\n.edit-form input {\n    width: 90%;\n    display: block;\n    text-align: center;\n    margin-left: 8px;\n    border: none;\n    padding: 5px;\n    border-radius: 6px;\n    margin-bottom: 10px;\n}\n\n.edit-form span {\n    padding: 5px;\n}\n\n/* Toggle this class - hide and show the popup */\n.show {\n    visibility: visible;\n    z-index: 0;\n    -webkit-animation: fadeIn 1s;\n    animation: fadeIn 1s;\n}\n\n/* Add animation (fade in the popup) */\n@-webkit-keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n}\n\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n}\n\n.form-check,\n.ok,\n.delete-confirm,\n.add-check {\n    color: var(--dark-green);\n    cursor: pointer;\n}\n\n.form-cancel,\n.cancel,\n.cancel-delete,\n.add-cancel {\n    color: var(--red);\n    cursor: pointer;\n}\n\n/* Sidebar notifications */\n\n.sidebar-notifications {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.today,\n.upcoming,\n.high-priority,\n.add-new-project {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.today-logo,\n.today .notif-text:hover {\n    color: var(--green);\n}\n\n.upcoming-logo,\n.upcoming .notif-text:hover {\n    color: var(--orange);\n}\n\n.priority-logo,\n.high-priority .notif-text:hover {\n    color: var(--red);\n}\n\n.notification {\n    opacity: 0.3;\n    margin-left: auto;\n    cursor: pointer;\n}\n\n.notif-text {\n    cursor: pointer;\n}\n\n.division {\n    border: 2px solid var(--purple);\n    opacity: 0.3;\n    width: 50%;\n    align-self: center;\n}\n\n/* My projects */\n\n.my-projects {\n    display: flex;\n    justify-content: space-between;\n}\n\n.add-pr-button,\n.edit-project {\n    opacity: 0.3;\n    cursor: pointer;\n}\n\n.projects-container {\n    padding: 1rem 0 0 1rem;\n}\n\n.project {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    position: relative;\n}\n\n.project div {\n    display: flex;\n    gap: 5px;\n}\n\n.edit-current-project,\n.delete-current-project,\n.add-new-project {\n    bottom: 0%;\n    left: 150%;\n    margin-left: -80px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.edit-current-project input,\n.add-new-project input {\n    border: none;\n    border-radius: 6px;\n    padding: 3px;\n    width: 90%;\n}\n\n.my-projects {\n    position: relative;\n}\n\n/* Main display */\n\n.main-display {\n    background-image: url("+l+");\n    position: relative;\n}\n\n.intro {\n    background-color: rgba(186, 215, 233, 0.3);\n    text-align: center;\n    width: 80%;\n    position: absolute;\n    top: 30%;\n    left: 10%;\n    border-radius: 6px;\n    color: var(--dark-blue);\n    padding-bottom: 10px;\n}\n\n.intro h1,\n.intro h3,\n.intro span {\n    padding: 10px;\n}\n\n.task {\n    opacity: 0.7;\n    font-size: 10px;\n    padding-left: 10px;\n    padding-top: 3px;\n    padding-bottom: 5px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,qCAAqC;AACzC;;AAEA;IACI,oBAAoB;IACpB,qBAAqB;IACrB,gBAAgB;IAChB,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,eAAe;IACf,qBAAqB;IACrB,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,yBAAyB;AAC7B;;AAEA,YAAY;;AAEZ;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,aAAa;IACb,wBAAwB;IACxB,kCAAkC;AACtC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,eAAe;AACnB;;AAEA,UAAU;AACV;IACI,kBAAkB;AACtB;;AAEA;;;;IAII,kBAAkB;IAClB,YAAY;IACZ,mCAAmC;IACnC,WAAW;IACX,kBAAkB;IAClB,kBAAkB;IAClB,cAAc;IACd,kBAAkB;IAClB,UAAU;IACV,YAAY;IACZ,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,cAAc;IACd,kBAAkB;IAClB,gBAAgB;IAChB,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,YAAY;AAChB;;AAEA,gDAAgD;AAChD;IACI,mBAAmB;IACnB,UAAU;IACV,4BAA4B;IAC5B,oBAAoB;AACxB;;AAEA,sCAAsC;AACtC;IACI;QACI,UAAU;IACd;IACA;QACI,UAAU;IACd;AACJ;;AAEA;IACI;QACI,UAAU;IACd;IACA;QACI,UAAU;IACd;AACJ;;AAEA;;;;IAII,wBAAwB;IACxB,eAAe;AACnB;;AAEA;;;;IAII,iBAAiB;IACjB,eAAe;AACnB;;AAEA,0BAA0B;;AAE1B;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;;;;IAII,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;;IAEI,mBAAmB;AACvB;;AAEA;;IAEI,oBAAoB;AACxB;;AAEA;;IAEI,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,+BAA+B;IAC/B,YAAY;IACZ,UAAU;IACV,kBAAkB;AACtB;;AAEA,gBAAgB;;AAEhB;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;;IAEI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,QAAQ;AACZ;;AAEA;;;IAGI,UAAU;IACV,UAAU;IACV,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;;IAEI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,UAAU;AACd;;AAEA;IACI,kBAAkB;AACtB;;AAEA,iBAAiB;;AAEjB;IACI,yDAA+C;IAC/C,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;IAC1C,kBAAkB;IAClB,UAAU;IACV,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,kBAAkB;IAClB,uBAAuB;IACvB,oBAAoB;AACxB;;AAEA;;;IAGI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,kBAAkB;IAClB,gBAAgB;IAChB,mBAAmB;AACvB",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Montserrat', sans-serif;\n}\n\n:root {\n    --dark-blue: #2b3467;\n    --light-blue: #bad7e9;\n    --cream: #fcffe7;\n    --red: #eb455f;\n    --purple: #5d3891;\n    --orange: #f99417;\n    --gray: #e8e2e2;\n    --light-grey: #f5f5f5;\n    --green: #ade792;\n    --dark-green: #5d9c59;\n}\n\n.main-container {\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 100vh;\n}\n\n/* Sidebar */\n\n.sidebar {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding: 1rem;\n    color: var(--light-grey);\n    background-color: var(--dark-blue);\n}\n\n.sidebar-head {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.sidebar-user {\n    font-size: 0.7rem;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.edit-user {\n    opacity: 0.3;\n    padding-left: 0px;\n    cursor: pointer;\n}\n\n/* PopUp */\n.edit-popup {\n    position: relative;\n}\n\n.edit-form,\n.edit-current-project,\n.delete-current-project,\n.add-new-project {\n    visibility: hidden;\n    width: 160px;\n    background-color: var(--light-blue);\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding: 8px 0;\n    position: absolute;\n    z-index: 1;\n    bottom: 125%;\n    left: 50%;\n    margin-left: -80px;\n}\n\n.edit-form input {\n    width: 90%;\n    display: block;\n    text-align: center;\n    margin-left: 8px;\n    border: none;\n    padding: 5px;\n    border-radius: 6px;\n    margin-bottom: 10px;\n}\n\n.edit-form span {\n    padding: 5px;\n}\n\n/* Toggle this class - hide and show the popup */\n.show {\n    visibility: visible;\n    z-index: 0;\n    -webkit-animation: fadeIn 1s;\n    animation: fadeIn 1s;\n}\n\n/* Add animation (fade in the popup) */\n@-webkit-keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n}\n\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n}\n\n.form-check,\n.ok,\n.delete-confirm,\n.add-check {\n    color: var(--dark-green);\n    cursor: pointer;\n}\n\n.form-cancel,\n.cancel,\n.cancel-delete,\n.add-cancel {\n    color: var(--red);\n    cursor: pointer;\n}\n\n/* Sidebar notifications */\n\n.sidebar-notifications {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.today,\n.upcoming,\n.high-priority,\n.add-new-project {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.today-logo,\n.today .notif-text:hover {\n    color: var(--green);\n}\n\n.upcoming-logo,\n.upcoming .notif-text:hover {\n    color: var(--orange);\n}\n\n.priority-logo,\n.high-priority .notif-text:hover {\n    color: var(--red);\n}\n\n.notification {\n    opacity: 0.3;\n    margin-left: auto;\n    cursor: pointer;\n}\n\n.notif-text {\n    cursor: pointer;\n}\n\n.division {\n    border: 2px solid var(--purple);\n    opacity: 0.3;\n    width: 50%;\n    align-self: center;\n}\n\n/* My projects */\n\n.my-projects {\n    display: flex;\n    justify-content: space-between;\n}\n\n.add-pr-button,\n.edit-project {\n    opacity: 0.3;\n    cursor: pointer;\n}\n\n.projects-container {\n    padding: 1rem 0 0 1rem;\n}\n\n.project {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    position: relative;\n}\n\n.project div {\n    display: flex;\n    gap: 5px;\n}\n\n.edit-current-project,\n.delete-current-project,\n.add-new-project {\n    bottom: 0%;\n    left: 150%;\n    margin-left: -80px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.edit-current-project input,\n.add-new-project input {\n    border: none;\n    border-radius: 6px;\n    padding: 3px;\n    width: 90%;\n}\n\n.my-projects {\n    position: relative;\n}\n\n/* Main display */\n\n.main-display {\n    background-image: url(./imgs/qwd83nc4xxf41.jpg);\n    position: relative;\n}\n\n.intro {\n    background-color: rgba(186, 215, 233, 0.3);\n    text-align: center;\n    width: 80%;\n    position: absolute;\n    top: 30%;\n    left: 10%;\n    border-radius: 6px;\n    color: var(--dark-blue);\n    padding-bottom: 10px;\n}\n\n.intro h1,\n.intro h3,\n.intro span {\n    padding: 10px;\n}\n\n.task {\n    opacity: 0.7;\n    font-size: 10px;\n    padding-left: 10px;\n    padding-top: 3px;\n    padding-bottom: 5px;\n}\n"],sourceRoot:""}]);const p=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);r&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],d=r.base?c[0]+r.base:c[0],s=a[d]||0,l="".concat(d," ").concat(s);a[d]=s+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=r(n,o),d=0;d<a.length;d++){var s=t(a[d]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},226:(n,e,t)=>{n.exports=t.p+"01705941a4aee1780727.jpg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),A=t(565),c=t.n(A),d=t(216),s=t.n(d),l=t(589),p=t.n(l),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=s(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const f=(n,e,t)=>{n.projects[e].projectName=t},C=(n,e)=>{e>-1&&n.projects.splice(e,1)};function g(){let n=document.querySelector(".projects-container");for(;n.firstChild;)n.removeChild(n.firstChild)}function B(n){n.projects.forEach((n=>{(function(n){let e=document.querySelector(".projects-container"),t=document.createElement("div");t.classList.add("project");let r=document.createElement("p");r.classList.add(`${n}-text`),r.textContent=n;let o=document.createElement("div"),a=document.createElement("span");a.classList.add("edit-project");let i=document.createElement("i");i.classList.add("fa-solid"),i.classList.add("fa-pen"),i.classList.add("fa-2xs"),i.classList.add("edit-project-btn"),i.setAttribute("value",n),a.appendChild(i);let A=document.createElement("span");A.classList.add("edit-project");let c=document.createElement("i");c.classList.add("fa-regular"),c.classList.add("fa-trash-can"),c.classList.add("fa-xs"),c.classList.add("delete-project-btn"),c.setAttribute("value",n),A.appendChild(c),o.appendChild(a),o.appendChild(A),t.appendChild(r),t.appendChild(o),o.appendChild(function(n){let e=document.createElement("div");e.classList.add("edit-current-project"),e.setAttribute("id",`${n}1`);let t=document.createElement("input");t.setAttribute("type","text"),t.setAttribute("name",n),t.setAttribute("id",n),t.setAttribute("value",n),e.appendChild(t);let r=document.createElement("div"),o=document.createElement("span");o.classList.add("ok");let a=document.createElement("i");a.classList.add("fa-solid"),a.classList.add("fa-check"),o.appendChild(a);let i=document.createElement("span");i.classList.add("cancel");let A=document.createElement("i");return A.classList.add("fa-solid"),A.classList.add("fa-xmark"),A.setAttribute("value",n),i.appendChild(A),r.appendChild(o),r.appendChild(i),e.appendChild(r),e}(n)),o.appendChild(function(n){let e=document.createElement("div");e.classList.add("delete-current-project"),e.setAttribute("id",`${n}-delete`);let t=document.createElement("h4");t.textContent=`Are you sure you want to delete ${n}`,e.appendChild(t);let r=document.createElement("div"),o=document.createElement("span");o.classList.add("delete-confirm");let a=document.createElement("i");a.classList.add("fa-solid"),a.classList.add("fa-check"),a.classList.add("delete-confirm-btn"),o.appendChild(a);let i=document.createElement("span");i.classList.add("cancel-delete");let A=document.createElement("i");return A.classList.add("fa-solid"),A.classList.add("fa-xmark"),A.setAttribute("value",n),i.appendChild(A),r.appendChild(o),r.appendChild(i),e.appendChild(r),e}(n)),e.appendChild(t);let d=document.createElement("div");d.classList.add(`${n}-tasks`),e.appendChild(d)})(n.projectName),n.tasks.forEach((e=>{!function(n,e){let t=document.querySelector(`.${n}-tasks`),r=document.createElement("p");r.classList.add("task"),r.textContent=e.description,t.appendChild(r)}(n.projectName,e)}))})),document.querySelectorAll(".edit-project-btn").forEach((n=>{n.addEventListener("click",(n=>{h(n.target.attributes.value.nodeValue)}))})),document.querySelectorAll(".cancel").forEach((n=>{n.addEventListener("click",(n=>{h(n.target.attributes.value.nodeValue)}))}));let e=document.querySelectorAll(".ok");e.forEach((t=>{let r=Array.from(e).indexOf(t);t.addEventListener("click",(()=>{let e=document.getElementById(`${n.projects[r].projectName}`).value;f(n,r,e),g(),B(n)}))})),document.querySelectorAll(".delete-project-btn").forEach((n=>{n.addEventListener("click",(n=>{b(n.target.attributes.value.nodeValue)}))})),document.querySelectorAll(".cancel-delete").forEach((n=>{n.addEventListener("click",(n=>{b(n.target.attributes.value.nodeValue)}))}));let t=document.querySelectorAll(".delete-confirm-btn");t.forEach((e=>{let r=Array.from(t).indexOf(e);e.addEventListener("click",(()=>{C(n,r),g(),B(n)}))}))}function I(){document.querySelector(".edit-form").classList.toggle("show")}function h(n){document.getElementById(`${n}1`).classList.toggle("show")}function b(n){document.getElementById(`${n}-delete`).classList.toggle("show")}const y={name:"User",projects:[{projectName:"Home",tasks:[{description:"Start by creating new tasks",date:"12-12-2023",hour:"12:00",priority:"high"}]},{projectName:"Work",tasks:[{description:"Start by creating new tasks",date:"12-12-2023",hour:"12:00",priority:"high"}]}]};var v;v=y,document.querySelector(".sidebar-user strong").textContent=v.name,function(n){document.querySelector(".edit-user").addEventListener("click",I),document.querySelector(".form-cancel").addEventListener("click",I);let e=document.querySelector(".form-check");e.addEventListener("click",(()=>{let e=document.getElementById("name");const t=document.querySelector(".sidebar-user strong");n.name=e.value,t.textContent=n.name})),e.addEventListener("click",I)}(y),function(n){document.querySelector(".add-project-btn").addEventListener("click",(()=>{document.querySelector(".add-new-project").classList.toggle("show")})),document.querySelector(".add-cancel").addEventListener("click",(()=>{document.querySelector(".add-new-project").classList.toggle("show")})),document.querySelector(".add-check").addEventListener("click",(()=>{let e=document.querySelector("#new-project-name").value;""!==e&&((n,e)=>{let t={projectName:e,tasks:[]};n.projects.push(t)})(n,e),document.querySelector(".add-new-project").classList.toggle("show"),g(),B(n)}))}(y),B(y)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,